1	 : import = import
1	 : <IDENTIFIER> = java
1	 : . = .
1	 : <IDENTIFIER> = lang
1	 : . = .
1	 : <IDENTIFIER> = ArrayIndexOutOfBoundsException
1	 : ; = ;
2	 : import = import
2	 : <IDENTIFIER> = java
2	 : . = .
2	 : <IDENTIFIER> = lang
2	 : . = .
2	 : <IDENTIFIER> = Double
2	 : ; = ;
3	 : import = import
3	 : <IDENTIFIER> = java
3	 : . = .
3	 : <IDENTIFIER> = lang
3	 : . = .
3	 : <IDENTIFIER> = Exception
3	 : ; = ;
4	 : import = import
4	 : <IDENTIFIER> = java
4	 : . = .
4	 : <IDENTIFIER> = lang
4	 : . = .
4	 : <IDENTIFIER> = IllegalArgumentException
4	 : ; = ;
5	 : import = import
5	 : <IDENTIFIER> = java
5	 : . = .
5	 : <IDENTIFIER> = lang
5	 : . = .
5	 : <IDENTIFIER> = NumberFormatException
5	 : ; = ;
6	 : import = import
6	 : <IDENTIFIER> = java
6	 : . = .
6	 : <IDENTIFIER> = lang
6	 : . = .
6	 : <IDENTIFIER> = System
6	 : ; = ;
8	 : public = public
8	 : class = class
8	 : <IDENTIFIER> = ExceptionHandlers
8	 : { = {
9	 : public = public
9	 : static = static
9	 : void = void
9	 : <IDENTIFIER> = main
9	 : ( = (
9	 : <IDENTIFIER> = String
9	 : [ = [
9	 : ] = ]
9	 : <IDENTIFIER> = args
9	 : ) = )
9	 : { = {
10	 : try = try
10	 : { = {
11	 : double = double
11	 : <IDENTIFIER> = x
11	 : = = =
11	 : <IDENTIFIER> = Double
11	 : . = .
11	 : <IDENTIFIER> = parseDouble
11	 : ( = (
11	 : <IDENTIFIER> = args
11	 : [ = [
11	 : <INT_LITERAL> = 0
11	 : ] = ]
11	 : ) = )
11	 : ; = ;
12	 : double = double
12	 : <IDENTIFIER> = result
12	 : = = =
12	 : <IDENTIFIER> = sqrt
12	 : ( = (
12	 : <IDENTIFIER> = x
12	 : ) = )
12	 : ; = ;
13	 : <IDENTIFIER> = System
13	 : . = .
13	 : <IDENTIFIER> = out
13	 : . = .
13	 : <IDENTIFIER> = println
13	 : ( = (
13	 : <IDENTIFIER> = result
13	 : ) = )
13	 : ; = ;
14	 : } = }
14	 : catch = catch
14	 : ( = (
14	 : <IDENTIFIER> = ArrayIndexOutOfBoundsException
14	 : <IDENTIFIER> = e
14	 : ) = )
14	 : { = {
15	 : <IDENTIFIER> = System
15	 : . = .
15	 : <IDENTIFIER> = out
15	 : . = .
15	 : <IDENTIFIER> = println
15	 : ( = (
15	 : <STRING_LITERAL> = "x not specified"
15	 : ) = )
15	 : ; = ;
16	 : } = }
16	 : catch = catch
16	 : ( = (
16	 : <IDENTIFIER> = NumberFormatException
16	 : <IDENTIFIER> = e
16	 : ) = )
16	 : { = {
17	 : <IDENTIFIER> = System
17	 : . = .
17	 : <IDENTIFIER> = out
17	 : . = .
17	 : <IDENTIFIER> = println
17	 : ( = (
17	 : <STRING_LITERAL> = "x must be a double"
17	 : ) = )
17	 : ; = ;
18	 : } = }
18	 : catch = catch
18	 : ( = (
18	 : <IDENTIFIER> = IllegalArgumentException
18	 : <IDENTIFIER> = e
18	 : ) = )
18	 : { = {
19	 : <IDENTIFIER> = System
19	 : . = .
19	 : <IDENTIFIER> = out
19	 : . = .
19	 : <IDENTIFIER> = println
19	 : ( = (
19	 : <IDENTIFIER> = e
19	 : . = .
19	 : <IDENTIFIER> = getMessage
19	 : ( = (
19	 : ) = )
19	 : ) = )
19	 : ; = ;
20	 : } = }
20	 : finally = finally
20	 : { = {
21	 : <IDENTIFIER> = System
21	 : . = .
21	 : <IDENTIFIER> = out
21	 : . = .
21	 : <IDENTIFIER> = println
21	 : ( = (
21	 : <STRING_LITERAL> = "Done!"
21	 : ) = )
21	 : ; = ;
22	 : } = }
23	 : } = }
25	 : private = private
25	 : static = static
25	 : double = double
25	 : <IDENTIFIER> = sqrt
25	 : ( = (
25	 : double = double
25	 : <IDENTIFIER> = x
25	 : ) = )
25	 : throws = throws
25	 : <IDENTIFIER> = IllegalArgumentException
25	 : { = {
26	 : if = if
26	 : ( = (
26	 : <IDENTIFIER> = x
26	 : < = <
26	 : <DOUBLE_LITERAL> = 0.0
26	 : ) = )
26	 : { = {
27	 : throw = throw
27	 : new = new
27	 : <IDENTIFIER> = IllegalArgumentException
27	 : ( = (
27	 : <STRING_LITERAL> = "x must be positve"
27	 : ) = )
27	 : ; = ;
28	 : } = }
29	 : return = return
29	 : <IDENTIFIER> = Math
29	 : . = .
29	 : <IDENTIFIER> = sqrt
29	 : ( = (
29	 : <IDENTIFIER> = x
29	 : ) = )
29	 : ; = ;
30	 : } = }
31	 : } = }
32	 : <End Of File> = <End Of File>

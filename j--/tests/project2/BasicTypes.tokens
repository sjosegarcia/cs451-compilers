1	 : import = import
1	 : <IDENTIFIER> = java
1	 : . = .
1	 : <IDENTIFIER> = lang
1	 : . = .
1	 : <IDENTIFIER> = Double
1	 : ; = ;
2	 : import = import
2	 : <IDENTIFIER> = java
2	 : . = .
2	 : <IDENTIFIER> = lang
2	 : . = .
2	 : <IDENTIFIER> = Math
2	 : ; = ;
3	 : import = import
3	 : <IDENTIFIER> = java
3	 : . = .
3	 : <IDENTIFIER> = lang
3	 : . = .
3	 : <IDENTIFIER> = System
3	 : ; = ;
5	 : public = public
5	 : class = class
5	 : <IDENTIFIER> = BasicTypes
5	 : { = {
6	 : private = private
6	 : static = static
6	 : void = void
6	 : <IDENTIFIER> = compute
6	 : ( = (
6	 : double = double
6	 : <IDENTIFIER> = a
6	 : , = ,
6	 : double = double
6	 : <IDENTIFIER> = b
6	 : , = ,
6	 : double = double
6	 : <IDENTIFIER> = c
6	 : , = ,
6	 : int = int
6	 : <IDENTIFIER> = n
6	 : ) = )
6	 : { = {
7	 : <IDENTIFIER> = quadratic
7	 : ( = (
7	 : <IDENTIFIER> = a
7	 : , = ,
7	 : <IDENTIFIER> = b
7	 : , = ,
7	 : <IDENTIFIER> = c
7	 : ) = )
7	 : ; = ;
8	 : <IDENTIFIER> = System
8	 : . = .
8	 : <IDENTIFIER> = out
8	 : . = .
8	 : <IDENTIFIER> = println
8	 : ( = (
8	 : <STRING_LITERAL> = "fibonacci("
8	 : + = +
8	 : <IDENTIFIER> = n
8	 : + = +
8	 : <STRING_LITERAL> = ") = "
8	 : + = +
8	 : <IDENTIFIER> = fibonacci
8	 : ( = (
8	 : <IDENTIFIER> = n
8	 : ) = )
8	 : ) = )
8	 : ; = ;
9	 : } = }
11	 : private = private
11	 : static = static
11	 : void = void
11	 : <IDENTIFIER> = quadratic
11	 : ( = (
11	 : double = double
11	 : <IDENTIFIER> = a
11	 : , = ,
11	 : double = double
11	 : <IDENTIFIER> = b
11	 : , = ,
11	 : double = double
11	 : <IDENTIFIER> = c
11	 : ) = )
11	 : { = {
12	 : double = double
12	 : <IDENTIFIER> = discriminant
12	 : = = =
12	 : <IDENTIFIER> = b
12	 : * = *
12	 : <IDENTIFIER> = b
12	 : - = -
12	 : <DOUBLE_LITERAL> = 4.0
12	 : * = *
12	 : <IDENTIFIER> = a
12	 : * = *
12	 : <IDENTIFIER> = c
12	 : ; = ;
13	 : double = double
13	 : <IDENTIFIER> = root1
13	 : = = =
13	 : ( = (
13	 : - = -
13	 : <IDENTIFIER> = b
13	 : + = +
13	 : <IDENTIFIER> = Math
13	 : . = .
13	 : <IDENTIFIER> = sqrt
13	 : ( = (
13	 : <IDENTIFIER> = discriminant
13	 : ) = )
13	 : ) = )
13	 : / = /
13	 : ( = (
13	 : <DOUBLE_LITERAL> = 2.0
13	 : * = *
13	 : <IDENTIFIER> = a
13	 : ) = )
13	 : ; = ;
14	 : double = double
14	 : <IDENTIFIER> = root2
14	 : = = =
14	 : ( = (
14	 : - = -
14	 : <IDENTIFIER> = b
14	 : - = -
14	 : <IDENTIFIER> = Math
14	 : . = .
14	 : <IDENTIFIER> = sqrt
14	 : ( = (
14	 : <IDENTIFIER> = discriminant
14	 : ) = )
14	 : ) = )
14	 : / = /
14	 : ( = (
14	 : <DOUBLE_LITERAL> = 2.0
14	 : * = *
14	 : <IDENTIFIER> = a
14	 : ) = )
14	 : ; = ;
15	 : <IDENTIFIER> = System
15	 : . = .
15	 : <IDENTIFIER> = out
15	 : . = .
15	 : <IDENTIFIER> = print
15	 : ( = (
15	 : <STRING_LITERAL> = "Roots of "
15	 : + = +
15	 : <IDENTIFIER> = a
15	 : + = +
15	 : <STRING_LITERAL> = "x^2 + "
15	 : + = +
15	 : <IDENTIFIER> = b
15	 : + = +
15	 : <STRING_LITERAL> = "x + "
15	 : + = +
15	 : <IDENTIFIER> = c
15	 : + = +
15	 : <STRING_LITERAL> = " = 0: "
15	 : ) = )
15	 : ; = ;
16	 : <IDENTIFIER> = System
16	 : . = .
16	 : <IDENTIFIER> = out
16	 : . = .
16	 : <IDENTIFIER> = print
16	 : ( = (
16	 : <IDENTIFIER> = root1
16	 : + = +
16	 : <STRING_LITERAL> = ", "
16	 : ) = )
16	 : ; = ;
17	 : <IDENTIFIER> = System
17	 : . = .
17	 : <IDENTIFIER> = out
17	 : . = .
17	 : <IDENTIFIER> = println
17	 : ( = (
17	 : <IDENTIFIER> = root2
17	 : ) = )
17	 : ; = ;
18	 : } = }
20	 : private = private
20	 : static = static
20	 : long = long
20	 : <IDENTIFIER> = fibonacci
20	 : ( = (
20	 : int = int
20	 : <IDENTIFIER> = n
20	 : ) = )
20	 : { = {
21	 : long = long
21	 : <IDENTIFIER> = a
21	 : = = =
21	 : <LONG_LITERAL> = 1L
21	 : , = ,
21	 : <IDENTIFIER> = b
21	 : = = =
21	 : <LONG_LITERAL> = 1L
21	 : ; = ;
22	 : int = int
22	 : <IDENTIFIER> = i
22	 : = = =
22	 : <INT_LITERAL> = 3
22	 : ; = ;
23	 : while = while
23	 : ( = (
23	 : <IDENTIFIER> = i
23	 : <= = <=
23	 : <IDENTIFIER> = n
23	 : ) = )
23	 : { = {
24	 : long = long
24	 : <IDENTIFIER> = temp
24	 : = = =
24	 : <IDENTIFIER> = a
24	 : ; = ;
25	 : <IDENTIFIER> = a
25	 : = = =
25	 : <IDENTIFIER> = b
25	 : ; = ;
26	 : <IDENTIFIER> = b
26	 : += = +=
26	 : <IDENTIFIER> = temp
26	 : ; = ;
27	 : <IDENTIFIER> = i
27	 : ++ = ++
27	 : ; = ;
28	 : } = }
29	 : return = return
29	 : <IDENTIFIER> = b
29	 : ; = ;
30	 : } = }
32	 : public = public
32	 : static = static
32	 : void = void
32	 : <IDENTIFIER> = main
32	 : ( = (
32	 : <IDENTIFIER> = String
32	 : [ = [
32	 : ] = ]
32	 : <IDENTIFIER> = args
32	 : ) = )
32	 : { = {
33	 : double = double
33	 : <IDENTIFIER> = a
33	 : = = =
33	 : <IDENTIFIER> = Double
33	 : . = .
33	 : <IDENTIFIER> = parseDouble
33	 : ( = (
33	 : <IDENTIFIER> = args
33	 : [ = [
33	 : <INT_LITERAL> = 0
33	 : ] = ]
33	 : ) = )
33	 : ; = ;
34	 : double = double
34	 : <IDENTIFIER> = b
34	 : = = =
34	 : <IDENTIFIER> = Double
34	 : . = .
34	 : <IDENTIFIER> = parseDouble
34	 : ( = (
34	 : <IDENTIFIER> = args
34	 : [ = [
34	 : <INT_LITERAL> = 1
34	 : ] = ]
34	 : ) = )
34	 : ; = ;
35	 : double = double
35	 : <IDENTIFIER> = c
35	 : = = =
35	 : <IDENTIFIER> = Double
35	 : . = .
35	 : <IDENTIFIER> = parseDouble
35	 : ( = (
35	 : <IDENTIFIER> = args
35	 : [ = [
35	 : <INT_LITERAL> = 2
35	 : ] = ]
35	 : ) = )
35	 : ; = ;
36	 : int = int
36	 : <IDENTIFIER> = n
36	 : = = =
36	 : <IDENTIFIER> = Integer
36	 : . = .
36	 : <IDENTIFIER> = parseInt
36	 : ( = (
36	 : <IDENTIFIER> = args
36	 : [ = [
36	 : <INT_LITERAL> = 3
36	 : ] = ]
36	 : ) = )
36	 : ; = ;
37	 : <IDENTIFIER> = compute
37	 : ( = (
37	 : <IDENTIFIER> = a
37	 : , = ,
37	 : <IDENTIFIER> = b
37	 : , = ,
37	 : <IDENTIFIER> = c
37	 : , = ,
37	 : <IDENTIFIER> = n
37	 : ) = )
37	 : ; = ;
38	 : } = }
39	 : } = }
40	 : <End Of File> = <End Of File>

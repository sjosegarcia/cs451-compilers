1	 : import = import
1	 : <IDENTIFIER> = java
1	 : . = .
1	 : <IDENTIFIER> = lang
1	 : . = .
1	 : <IDENTIFIER> = Integer
1	 : ; = ;
2	 : import = import
2	 : <IDENTIFIER> = java
2	 : . = .
2	 : <IDENTIFIER> = lang
2	 : . = .
2	 : <IDENTIFIER> = System
2	 : ; = ;
4	 : interface = interface
4	 : <IDENTIFIER> = Factorial
4	 : { = {
5	 : public = public
5	 : int = int
5	 : <IDENTIFIER> = compute
5	 : ( = (
5	 : int = int
5	 : <IDENTIFIER> = n
5	 : ) = )
5	 : ; = ;
6	 : } = }
8	 : class = class
8	 : <IDENTIFIER> = FactorialIter
8	 : implements = implements
8	 : <IDENTIFIER> = Factorial
8	 : { = {
9	 : public = public
9	 : int = int
9	 : <IDENTIFIER> = compute
9	 : ( = (
9	 : int = int
9	 : <IDENTIFIER> = n
9	 : ) = )
9	 : { = {
10	 : int = int
10	 : <IDENTIFIER> = result
10	 : = = =
10	 : <INT_LITERAL> = 1
10	 : ; = ;
11	 : for = for
11	 : ( = (
11	 : int = int
11	 : <IDENTIFIER> = i
11	 : = = =
11	 : <INT_LITERAL> = 1
11	 : ; = ;
11	 : <IDENTIFIER> = i
11	 : <= = <=
11	 : <IDENTIFIER> = n
11	 : ; = ;
11	 : <IDENTIFIER> = i
11	 : ++ = ++
11	 : ) = )
11	 : { = {
12	 : <IDENTIFIER> = result
12	 : *= = *=
12	 : <IDENTIFIER> = i
12	 : ; = ;
13	 : } = }
14	 : return = return
14	 : <IDENTIFIER> = result
14	 : ; = ;
15	 : } = }
16	 : } = }
18	 : class = class
18	 : <IDENTIFIER> = FactorialRec
18	 : implements = implements
18	 : <IDENTIFIER> = Factorial
18	 : { = {
19	 : public = public
19	 : int = int
19	 : <IDENTIFIER> = compute
19	 : ( = (
19	 : int = int
19	 : <IDENTIFIER> = n
19	 : ) = )
19	 : { = {
20	 : return = return
20	 : <IDENTIFIER> = n
20	 : == = ==
20	 : <INT_LITERAL> = 0
20	 : ? = ?
20	 : <INT_LITERAL> = 1
20	 : : = :
20	 : <IDENTIFIER> = n
20	 : * = *
20	 : <IDENTIFIER> = compute
20	 : ( = (
20	 : <IDENTIFIER> = n
20	 : - = -
20	 : <INT_LITERAL> = 1
20	 : ) = )
20	 : ; = ;
21	 : } = }
22	 : } = }
24	 : public = public
24	 : class = class
24	 : <IDENTIFIER> = Interface
24	 : { = {
25	 : public = public
25	 : static = static
25	 : void = void
25	 : <IDENTIFIER> = main
25	 : ( = (
25	 : <IDENTIFIER> = String
25	 : [ = [
25	 : ] = ]
25	 : <IDENTIFIER> = args
25	 : ) = )
25	 : { = {
26	 : int = int
26	 : <IDENTIFIER> = n
26	 : = = =
26	 : <IDENTIFIER> = Integer
26	 : . = .
26	 : <IDENTIFIER> = parseInt
26	 : ( = (
26	 : <IDENTIFIER> = args
26	 : [ = [
26	 : <INT_LITERAL> = 0
26	 : ] = ]
26	 : ) = )
26	 : ; = ;
27	 : <IDENTIFIER> = FactorialIter
27	 : <IDENTIFIER> = fIter
27	 : = = =
27	 : new = new
27	 : <IDENTIFIER> = FactorialIter
27	 : ( = (
27	 : ) = )
27	 : ; = ;
28	 : <IDENTIFIER> = System
28	 : . = .
28	 : <IDENTIFIER> = out
28	 : . = .
28	 : <IDENTIFIER> = println
28	 : ( = (
28	 : <STRING_LITERAL> = "fIter("
28	 : + = +
28	 : <IDENTIFIER> = n
28	 : + = +
28	 : <STRING_LITERAL> = ") = "
28	 : + = +
28	 : <IDENTIFIER> = fIter
28	 : . = .
28	 : <IDENTIFIER> = compute
28	 : ( = (
28	 : <IDENTIFIER> = n
28	 : ) = )
28	 : ) = )
28	 : ; = ;
29	 : <IDENTIFIER> = FactorialRec
29	 : <IDENTIFIER> = fRec
29	 : = = =
29	 : new = new
29	 : <IDENTIFIER> = FactorialRec
29	 : ( = (
29	 : ) = )
29	 : ; = ;
30	 : <IDENTIFIER> = System
30	 : . = .
30	 : <IDENTIFIER> = out
30	 : . = .
30	 : <IDENTIFIER> = println
30	 : ( = (
30	 : <STRING_LITERAL> = "fRec("
30	 : + = +
30	 : <IDENTIFIER> = n
30	 : + = +
30	 : <STRING_LITERAL> = ")  = "
30	 : + = +
30	 : <IDENTIFIER> = fRec
30	 : . = .
30	 : <IDENTIFIER> = compute
30	 : ( = (
30	 : <IDENTIFIER> = n
30	 : ) = )
30	 : ) = )
30	 : ; = ;
31	 : } = }
32	 : } = }
33	 : <End Of File> = <End Of File>
